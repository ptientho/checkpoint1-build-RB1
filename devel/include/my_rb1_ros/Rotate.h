// Generated by gencpp from file my_rb1_ros/Rotate.msg
// DO NOT EDIT!


#ifndef MY_RB1_ROS_MESSAGE_ROTATE_H
#define MY_RB1_ROS_MESSAGE_ROTATE_H

#include <ros/service_traits.h>


#include <my_rb1_ros/RotateRequest.h>
#include <my_rb1_ros/RotateResponse.h>


namespace my_rb1_ros
{

struct Rotate
{

typedef RotateRequest Request;
typedef RotateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Rotate
} // namespace my_rb1_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::my_rb1_ros::Rotate > {
  static const char* value()
  {
    return "0643b709f08e1632b29259c672148c3b";
  }

  static const char* value(const ::my_rb1_ros::Rotate&) { return value(); }
};

template<>
struct DataType< ::my_rb1_ros::Rotate > {
  static const char* value()
  {
    return "my_rb1_ros/Rotate";
  }

  static const char* value(const ::my_rb1_ros::Rotate&) { return value(); }
};


// service_traits::MD5Sum< ::my_rb1_ros::RotateRequest> should match
// service_traits::MD5Sum< ::my_rb1_ros::Rotate >
template<>
struct MD5Sum< ::my_rb1_ros::RotateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::my_rb1_ros::Rotate >::value();
  }
  static const char* value(const ::my_rb1_ros::RotateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_rb1_ros::RotateRequest> should match
// service_traits::DataType< ::my_rb1_ros::Rotate >
template<>
struct DataType< ::my_rb1_ros::RotateRequest>
{
  static const char* value()
  {
    return DataType< ::my_rb1_ros::Rotate >::value();
  }
  static const char* value(const ::my_rb1_ros::RotateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::my_rb1_ros::RotateResponse> should match
// service_traits::MD5Sum< ::my_rb1_ros::Rotate >
template<>
struct MD5Sum< ::my_rb1_ros::RotateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::my_rb1_ros::Rotate >::value();
  }
  static const char* value(const ::my_rb1_ros::RotateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_rb1_ros::RotateResponse> should match
// service_traits::DataType< ::my_rb1_ros::Rotate >
template<>
struct DataType< ::my_rb1_ros::RotateResponse>
{
  static const char* value()
  {
    return DataType< ::my_rb1_ros::Rotate >::value();
  }
  static const char* value(const ::my_rb1_ros::RotateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MY_RB1_ROS_MESSAGE_ROTATE_H
